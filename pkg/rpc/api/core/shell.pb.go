// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.24.4
// source: shell.proto

package core

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ShellMsgType int32

const (
	ShellMsgType_SHELL_MSG_TYPE_IO      ShellMsgType = 0 // 程序输入输出数据
	ShellMsgType_SHELL_MSG_TYPE_COMMAND ShellMsgType = 1 // 初始化 shell 的命令
	ShellMsgType_SHELL_MSG_TYPE_RESIZE  ShellMsgType = 2 // 改变窗口大小
)

// Enum value maps for ShellMsgType.
var (
	ShellMsgType_name = map[int32]string{
		0: "SHELL_MSG_TYPE_IO",
		1: "SHELL_MSG_TYPE_COMMAND",
		2: "SHELL_MSG_TYPE_RESIZE",
	}
	ShellMsgType_value = map[string]int32{
		"SHELL_MSG_TYPE_IO":      0,
		"SHELL_MSG_TYPE_COMMAND": 1,
		"SHELL_MSG_TYPE_RESIZE":  2,
	}
)

func (x ShellMsgType) Enum() *ShellMsgType {
	p := new(ShellMsgType)
	*p = x
	return p
}

func (x ShellMsgType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ShellMsgType) Descriptor() protoreflect.EnumDescriptor {
	return file_shell_proto_enumTypes[0].Descriptor()
}

func (ShellMsgType) Type() protoreflect.EnumType {
	return &file_shell_proto_enumTypes[0]
}

func (x ShellMsgType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ShellMsgType.Descriptor instead.
func (ShellMsgType) EnumDescriptor() ([]byte, []int) {
	return file_shell_proto_rawDescGZIP(), []int{0}
}

type IODataType int32

const (
	IODataType_Stdin  IODataType = 0
	IODataType_Stdout IODataType = 1
	IODataType_Stderr IODataType = 2
)

// Enum value maps for IODataType.
var (
	IODataType_name = map[int32]string{
		0: "Stdin",
		1: "Stdout",
		2: "Stderr",
	}
	IODataType_value = map[string]int32{
		"Stdin":  0,
		"Stdout": 1,
		"Stderr": 2,
	}
)

func (x IODataType) Enum() *IODataType {
	p := new(IODataType)
	*p = x
	return p
}

func (x IODataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IODataType) Descriptor() protoreflect.EnumDescriptor {
	return file_shell_proto_enumTypes[1].Descriptor()
}

func (IODataType) Type() protoreflect.EnumType {
	return &file_shell_proto_enumTypes[1]
}

func (x IODataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IODataType.Descriptor instead.
func (IODataType) EnumDescriptor() ([]byte, []int) {
	return file_shell_proto_rawDescGZIP(), []int{1}
}

type SysProcAttrLinux struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Chroot string                 `protobuf:"bytes,1,opt,name=Chroot,proto3" json:"Chroot,omitempty"`
	// Types that are valid to be assigned to User:
	//
	//	*SysProcAttrLinux_Uid
	//	*SysProcAttrLinux_Username
	User isSysProcAttrLinux_User `protobuf_oneof:"User"`
	// Types that are valid to be assigned to Group:
	//
	//	*SysProcAttrLinux_Gid
	//	*SysProcAttrLinux_Groupname
	Group         isSysProcAttrLinux_Group `protobuf_oneof:"Group"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SysProcAttrLinux) Reset() {
	*x = SysProcAttrLinux{}
	mi := &file_shell_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SysProcAttrLinux) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysProcAttrLinux) ProtoMessage() {}

func (x *SysProcAttrLinux) ProtoReflect() protoreflect.Message {
	mi := &file_shell_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysProcAttrLinux.ProtoReflect.Descriptor instead.
func (*SysProcAttrLinux) Descriptor() ([]byte, []int) {
	return file_shell_proto_rawDescGZIP(), []int{0}
}

func (x *SysProcAttrLinux) GetChroot() string {
	if x != nil {
		return x.Chroot
	}
	return ""
}

func (x *SysProcAttrLinux) GetUser() isSysProcAttrLinux_User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *SysProcAttrLinux) GetUid() uint32 {
	if x != nil {
		if x, ok := x.User.(*SysProcAttrLinux_Uid); ok {
			return x.Uid
		}
	}
	return 0
}

func (x *SysProcAttrLinux) GetUsername() string {
	if x != nil {
		if x, ok := x.User.(*SysProcAttrLinux_Username); ok {
			return x.Username
		}
	}
	return ""
}

func (x *SysProcAttrLinux) GetGroup() isSysProcAttrLinux_Group {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *SysProcAttrLinux) GetGid() uint32 {
	if x != nil {
		if x, ok := x.Group.(*SysProcAttrLinux_Gid); ok {
			return x.Gid
		}
	}
	return 0
}

func (x *SysProcAttrLinux) GetGroupname() string {
	if x != nil {
		if x, ok := x.Group.(*SysProcAttrLinux_Groupname); ok {
			return x.Groupname
		}
	}
	return ""
}

type isSysProcAttrLinux_User interface {
	isSysProcAttrLinux_User()
}

type SysProcAttrLinux_Uid struct {
	Uid uint32 `protobuf:"varint,2,opt,name=Uid,proto3,oneof"`
}

type SysProcAttrLinux_Username struct {
	Username string `protobuf:"bytes,3,opt,name=Username,proto3,oneof"`
}

func (*SysProcAttrLinux_Uid) isSysProcAttrLinux_User() {}

func (*SysProcAttrLinux_Username) isSysProcAttrLinux_User() {}

type isSysProcAttrLinux_Group interface {
	isSysProcAttrLinux_Group()
}

type SysProcAttrLinux_Gid struct {
	Gid uint32 `protobuf:"varint,4,opt,name=Gid,proto3,oneof"`
}

type SysProcAttrLinux_Groupname struct {
	Groupname string `protobuf:"bytes,5,opt,name=Groupname,proto3,oneof"`
}

func (*SysProcAttrLinux_Gid) isSysProcAttrLinux_Group() {}

func (*SysProcAttrLinux_Groupname) isSysProcAttrLinux_Group() {}

type SysProcAttrWindows struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SysProcAttrWindows) Reset() {
	*x = SysProcAttrWindows{}
	mi := &file_shell_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SysProcAttrWindows) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysProcAttrWindows) ProtoMessage() {}

func (x *SysProcAttrWindows) ProtoReflect() protoreflect.Message {
	mi := &file_shell_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysProcAttrWindows.ProtoReflect.Descriptor instead.
func (*SysProcAttrWindows) Descriptor() ([]byte, []int) {
	return file_shell_proto_rawDescGZIP(), []int{1}
}

type Env struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Env) Reset() {
	*x = Env{}
	mi := &file_shell_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Env) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Env) ProtoMessage() {}

func (x *Env) ProtoReflect() protoreflect.Message {
	mi := &file_shell_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Env.ProtoReflect.Descriptor instead.
func (*Env) Descriptor() ([]byte, []int) {
	return file_shell_proto_rawDescGZIP(), []int{2}
}

func (x *Env) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Env) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Cmd struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Path  string                 `protobuf:"bytes,1,opt,name=Path,proto3" json:"Path,omitempty"`
	Args  []string               `protobuf:"bytes,2,rep,name=Args,proto3" json:"Args,omitempty"`
	Envs  []*Env                 `protobuf:"bytes,3,rep,name=Envs,proto3" json:"Envs,omitempty"`
	Dir   string                 `protobuf:"bytes,4,opt,name=Dir,proto3" json:"Dir,omitempty"`
	// Types that are valid to be assigned to SysProcAttr:
	//
	//	*Cmd_Linux
	//	*Cmd_Windows
	SysProcAttr   isCmd_SysProcAttr `protobuf_oneof:"SysProcAttr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Cmd) Reset() {
	*x = Cmd{}
	mi := &file_shell_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Cmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd) ProtoMessage() {}

func (x *Cmd) ProtoReflect() protoreflect.Message {
	mi := &file_shell_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd.ProtoReflect.Descriptor instead.
func (*Cmd) Descriptor() ([]byte, []int) {
	return file_shell_proto_rawDescGZIP(), []int{3}
}

func (x *Cmd) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Cmd) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *Cmd) GetEnvs() []*Env {
	if x != nil {
		return x.Envs
	}
	return nil
}

func (x *Cmd) GetDir() string {
	if x != nil {
		return x.Dir
	}
	return ""
}

func (x *Cmd) GetSysProcAttr() isCmd_SysProcAttr {
	if x != nil {
		return x.SysProcAttr
	}
	return nil
}

func (x *Cmd) GetLinux() *SysProcAttrLinux {
	if x != nil {
		if x, ok := x.SysProcAttr.(*Cmd_Linux); ok {
			return x.Linux
		}
	}
	return nil
}

func (x *Cmd) GetWindows() *SysProcAttrWindows {
	if x != nil {
		if x, ok := x.SysProcAttr.(*Cmd_Windows); ok {
			return x.Windows
		}
	}
	return nil
}

type isCmd_SysProcAttr interface {
	isCmd_SysProcAttr()
}

type Cmd_Linux struct {
	Linux *SysProcAttrLinux `protobuf:"bytes,10,opt,name=Linux,proto3,oneof"`
}

type Cmd_Windows struct {
	Windows *SysProcAttrWindows `protobuf:"bytes,11,opt,name=Windows,proto3,oneof"`
}

func (*Cmd_Linux) isCmd_SysProcAttr() {}

func (*Cmd_Windows) isCmd_SysProcAttr() {}

type WinSize struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cols          int32                  `protobuf:"varint,1,opt,name=Cols,proto3" json:"Cols,omitempty"`
	Rows          int32                  `protobuf:"varint,2,opt,name=Rows,proto3" json:"Rows,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WinSize) Reset() {
	*x = WinSize{}
	mi := &file_shell_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WinSize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WinSize) ProtoMessage() {}

func (x *WinSize) ProtoReflect() protoreflect.Message {
	mi := &file_shell_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WinSize.ProtoReflect.Descriptor instead.
func (*WinSize) Descriptor() ([]byte, []int) {
	return file_shell_proto_rawDescGZIP(), []int{4}
}

func (x *WinSize) GetCols() int32 {
	if x != nil {
		return x.Cols
	}
	return 0
}

func (x *WinSize) GetRows() int32 {
	if x != nil {
		return x.Rows
	}
	return 0
}

type IoData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          IODataType             `protobuf:"varint,1,opt,name=Type,proto3,enum=IODataType" json:"Type,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IoData) Reset() {
	*x = IoData{}
	mi := &file_shell_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IoData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IoData) ProtoMessage() {}

func (x *IoData) ProtoReflect() protoreflect.Message {
	mi := &file_shell_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IoData.ProtoReflect.Descriptor instead.
func (*IoData) Descriptor() ([]byte, []int) {
	return file_shell_proto_rawDescGZIP(), []int{5}
}

func (x *IoData) GetType() IODataType {
	if x != nil {
		return x.Type
	}
	return IODataType_Stdin
}

func (x *IoData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ShellMsg struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Type  ShellMsgType           `protobuf:"varint,1,opt,name=type,proto3,enum=ShellMsgType" json:"type,omitempty"`
	// Types that are valid to be assigned to Data:
	//
	//	*ShellMsg_Cmd
	//	*ShellMsg_IO
	//	*ShellMsg_Resize
	Data          isShellMsg_Data `protobuf_oneof:"Data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShellMsg) Reset() {
	*x = ShellMsg{}
	mi := &file_shell_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShellMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShellMsg) ProtoMessage() {}

func (x *ShellMsg) ProtoReflect() protoreflect.Message {
	mi := &file_shell_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShellMsg.ProtoReflect.Descriptor instead.
func (*ShellMsg) Descriptor() ([]byte, []int) {
	return file_shell_proto_rawDescGZIP(), []int{6}
}

func (x *ShellMsg) GetType() ShellMsgType {
	if x != nil {
		return x.Type
	}
	return ShellMsgType_SHELL_MSG_TYPE_IO
}

func (x *ShellMsg) GetData() isShellMsg_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ShellMsg) GetCmd() *Cmd {
	if x != nil {
		if x, ok := x.Data.(*ShellMsg_Cmd); ok {
			return x.Cmd
		}
	}
	return nil
}

func (x *ShellMsg) GetIO() *IoData {
	if x != nil {
		if x, ok := x.Data.(*ShellMsg_IO); ok {
			return x.IO
		}
	}
	return nil
}

func (x *ShellMsg) GetResize() *WinSize {
	if x != nil {
		if x, ok := x.Data.(*ShellMsg_Resize); ok {
			return x.Resize
		}
	}
	return nil
}

type isShellMsg_Data interface {
	isShellMsg_Data()
}

type ShellMsg_Cmd struct {
	Cmd *Cmd `protobuf:"bytes,2,opt,name=Cmd,proto3,oneof"`
}

type ShellMsg_IO struct {
	IO *IoData `protobuf:"bytes,3,opt,name=IO,proto3,oneof"`
}

type ShellMsg_Resize struct {
	Resize *WinSize `protobuf:"bytes,4,opt,name=Resize,proto3,oneof"`
}

func (*ShellMsg_Cmd) isShellMsg_Data() {}

func (*ShellMsg_IO) isShellMsg_Data() {}

func (*ShellMsg_Resize) isShellMsg_Data() {}

var File_shell_proto protoreflect.FileDescriptor

const file_shell_proto_rawDesc = "" +
	"\n" +
	"\vshell.proto\"\xa1\x01\n" +
	"\x10SysProcAttrLinux\x12\x16\n" +
	"\x06Chroot\x18\x01 \x01(\tR\x06Chroot\x12\x12\n" +
	"\x03Uid\x18\x02 \x01(\rH\x00R\x03Uid\x12\x1c\n" +
	"\bUsername\x18\x03 \x01(\tH\x00R\bUsername\x12\x12\n" +
	"\x03Gid\x18\x04 \x01(\rH\x01R\x03Gid\x12\x1e\n" +
	"\tGroupname\x18\x05 \x01(\tH\x01R\tGroupnameB\x06\n" +
	"\x04UserB\a\n" +
	"\x05Group\"\x14\n" +
	"\x12SysProcAttrWindows\"/\n" +
	"\x03Env\x12\x12\n" +
	"\x04Name\x18\x01 \x01(\tR\x04Name\x12\x14\n" +
	"\x05Value\x18\x02 \x01(\tR\x05Value\"\xc4\x01\n" +
	"\x03Cmd\x12\x12\n" +
	"\x04Path\x18\x01 \x01(\tR\x04Path\x12\x12\n" +
	"\x04Args\x18\x02 \x03(\tR\x04Args\x12\x18\n" +
	"\x04Envs\x18\x03 \x03(\v2\x04.EnvR\x04Envs\x12\x10\n" +
	"\x03Dir\x18\x04 \x01(\tR\x03Dir\x12)\n" +
	"\x05Linux\x18\n" +
	" \x01(\v2\x11.SysProcAttrLinuxH\x00R\x05Linux\x12/\n" +
	"\aWindows\x18\v \x01(\v2\x13.SysProcAttrWindowsH\x00R\aWindowsB\r\n" +
	"\vSysProcAttr\"1\n" +
	"\aWinSize\x12\x12\n" +
	"\x04Cols\x18\x01 \x01(\x05R\x04Cols\x12\x12\n" +
	"\x04Rows\x18\x02 \x01(\x05R\x04Rows\"=\n" +
	"\x06IoData\x12\x1f\n" +
	"\x04Type\x18\x01 \x01(\x0e2\v.IODataTypeR\x04Type\x12\x12\n" +
	"\x04Data\x18\x02 \x01(\fR\x04Data\"\x8e\x01\n" +
	"\bShellMsg\x12!\n" +
	"\x04type\x18\x01 \x01(\x0e2\r.ShellMsgTypeR\x04type\x12\x18\n" +
	"\x03Cmd\x18\x02 \x01(\v2\x04.CmdH\x00R\x03Cmd\x12\x19\n" +
	"\x02IO\x18\x03 \x01(\v2\a.IoDataH\x00R\x02IO\x12\"\n" +
	"\x06Resize\x18\x04 \x01(\v2\b.WinSizeH\x00R\x06ResizeB\x06\n" +
	"\x04Data*\\\n" +
	"\fShellMsgType\x12\x15\n" +
	"\x11SHELL_MSG_TYPE_IO\x10\x00\x12\x1a\n" +
	"\x16SHELL_MSG_TYPE_COMMAND\x10\x01\x12\x19\n" +
	"\x15SHELL_MSG_TYPE_RESIZE\x10\x02*/\n" +
	"\n" +
	"IODataType\x12\t\n" +
	"\x05Stdin\x10\x00\x12\n" +
	"\n" +
	"\x06Stdout\x10\x01\x12\n" +
	"\n" +
	"\x06Stderr\x10\x022*\n" +
	"\x05Shell\x12!\n" +
	"\x05Shell\x12\t.ShellMsg\x1a\t.ShellMsg(\x010\x01B\bZ\x06.;coreb\x06proto3"

var (
	file_shell_proto_rawDescOnce sync.Once
	file_shell_proto_rawDescData []byte
)

func file_shell_proto_rawDescGZIP() []byte {
	file_shell_proto_rawDescOnce.Do(func() {
		file_shell_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_shell_proto_rawDesc), len(file_shell_proto_rawDesc)))
	})
	return file_shell_proto_rawDescData
}

var file_shell_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_shell_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_shell_proto_goTypes = []any{
	(ShellMsgType)(0),          // 0: ShellMsgType
	(IODataType)(0),            // 1: IODataType
	(*SysProcAttrLinux)(nil),   // 2: SysProcAttrLinux
	(*SysProcAttrWindows)(nil), // 3: SysProcAttrWindows
	(*Env)(nil),                // 4: Env
	(*Cmd)(nil),                // 5: Cmd
	(*WinSize)(nil),            // 6: WinSize
	(*IoData)(nil),             // 7: IoData
	(*ShellMsg)(nil),           // 8: ShellMsg
}
var file_shell_proto_depIdxs = []int32{
	4, // 0: Cmd.Envs:type_name -> Env
	2, // 1: Cmd.Linux:type_name -> SysProcAttrLinux
	3, // 2: Cmd.Windows:type_name -> SysProcAttrWindows
	1, // 3: IoData.Type:type_name -> IODataType
	0, // 4: ShellMsg.type:type_name -> ShellMsgType
	5, // 5: ShellMsg.Cmd:type_name -> Cmd
	7, // 6: ShellMsg.IO:type_name -> IoData
	6, // 7: ShellMsg.Resize:type_name -> WinSize
	8, // 8: Shell.Shell:input_type -> ShellMsg
	8, // 9: Shell.Shell:output_type -> ShellMsg
	9, // [9:10] is the sub-list for method output_type
	8, // [8:9] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_shell_proto_init() }
func file_shell_proto_init() {
	if File_shell_proto != nil {
		return
	}
	file_shell_proto_msgTypes[0].OneofWrappers = []any{
		(*SysProcAttrLinux_Uid)(nil),
		(*SysProcAttrLinux_Username)(nil),
		(*SysProcAttrLinux_Gid)(nil),
		(*SysProcAttrLinux_Groupname)(nil),
	}
	file_shell_proto_msgTypes[3].OneofWrappers = []any{
		(*Cmd_Linux)(nil),
		(*Cmd_Windows)(nil),
	}
	file_shell_proto_msgTypes[6].OneofWrappers = []any{
		(*ShellMsg_Cmd)(nil),
		(*ShellMsg_IO)(nil),
		(*ShellMsg_Resize)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_shell_proto_rawDesc), len(file_shell_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_shell_proto_goTypes,
		DependencyIndexes: file_shell_proto_depIdxs,
		EnumInfos:         file_shell_proto_enumTypes,
		MessageInfos:      file_shell_proto_msgTypes,
	}.Build()
	File_shell_proto = out.File
	file_shell_proto_goTypes = nil
	file_shell_proto_depIdxs = nil
}
